/*
  # Schema Inicial para o Painel de Venda de Anões

  Este schema cria as tabelas fundamentais para o funcionamento do sistema de venda de peds (anões).

  1. Novas Tabelas
     - `dwarfs`: Armazena os detalhes de cada anão disponível para compra.
       - `id`: Identificador único (UUID).
       - `name`: Nome de exibição do anão (ex: "Anão Mineiro").
       - `model`: Nome do modelo de spawn do ped.
       - `image_url`: URL da imagem para exibição no painel.
       - `price`: Preço em "coins" para comprar o anão.
       - `created_at`: Data de criação do registro.

     - `player_dwarfs`: Associa os jogadores aos anões que eles compraram.
       - `id`: Identificador único.
       - `player_identifier`: Identificador único do jogador (ex: licença FiveM).
       - `dwarf_id`: Chave estrangeira para a tabela `dwarfs`.
       - `purchased_at`: Data da compra.

  2. Segurança
     - RLS (Row Level Security) ativado em ambas as tabelas.
     - `dwarfs`: Qualquer usuário autenticado pode ler a lista de anões.
     - `player_dwarfs`: Usuários autenticados só podem ver e gerenciar suas próprias compras.
*/

-- Tabela para armazenar os anões disponíveis
CREATE TABLE IF NOT EXISTS dwarfs (
    id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    name TEXT NOT NULL,
    model TEXT NOT NULL UNIQUE,
    image_url TEXT,
    price INTEGER NOT NULL DEFAULT 0,
    created_at TIMESTAMPTZ DEFAULT now()
);

-- Tabela para registrar as compras dos jogadores
CREATE TABLE IF NOT EXISTS player_dwarfs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    player_identifier TEXT NOT NULL,
    dwarf_id UUID NOT NULL REFERENCES dwarfs(id),
    purchased_at TIMESTAMPTZ DEFAULT now(),
    UNIQUE(player_identifier, dwarf_id)
);

-- Ativar RLS
ALTER TABLE dwarfs ENABLE ROW LEVEL SECURITY;
ALTER TABLE player_dwarfs ENABLE ROW LEVEL SECURITY;

-- Políticas de Acesso
CREATE POLICY "Allow authenticated users to read dwarfs"
ON dwarfs
FOR SELECT
TO authenticated
USING (true);

CREATE POLICY "Allow users to see their own purchases"
ON player_dwarfs
FOR SELECT
TO authenticated
USING (auth.uid()::text = player_identifier); -- Assumindo que o ID do Supabase Auth será usado como player_identifier. Isso pode ser ajustado.

-- Índices para otimização de consultas
CREATE INDEX IF NOT EXISTS idx_player_dwarfs_player_identifier ON player_dwarfs(player_identifier);